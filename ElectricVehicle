{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOZuBAAIP1T2Ixc/IIg3YiZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"yifIHvdOP9c8","executionInfo":{"status":"ok","timestamp":1717706806561,"user_tz":-180,"elapsed":2513,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"bbbd0607-55c7-4420-c7b0-38c30975b98e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   VIN (1-10)     County       City State  Postal Code  Model Year   Make  \\\n","0  5YJYGDEE1L       King    Seattle    WA        98122        2020  TESLA   \n","1  7SAYGDEE9P  Snohomish    Bothell    WA        98021        2023  TESLA   \n","2  5YJSA1E4XK       King    Seattle    WA        98109        2019  TESLA   \n","3  5YJSA1E27G       King   Issaquah    WA        98027        2016  TESLA   \n","4  5YJYGDEE5M     Kitsap  Suquamish    WA        98392        2021  TESLA   \n","\n","     Model           Electric Vehicle Type  \\\n","0  MODEL Y  Battery Electric Vehicle (BEV)   \n","1  MODEL Y  Battery Electric Vehicle (BEV)   \n","2  MODEL S  Battery Electric Vehicle (BEV)   \n","3  MODEL S  Battery Electric Vehicle (BEV)   \n","4  MODEL Y  Battery Electric Vehicle (BEV)   \n","\n","   Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0            Clean Alternative Fuel Vehicle Eligible           291.0   \n","1  Eligibility unknown as battery range has not b...             0.0   \n","2            Clean Alternative Fuel Vehicle Eligible           270.0   \n","3            Clean Alternative Fuel Vehicle Eligible           210.0   \n","4  Eligibility unknown as battery range has not b...             0.0   \n","\n","   Base MSRP  Legislative District  DOL Vehicle ID  \\\n","0        0.0                  37.0     125701579.0   \n","1        0.0                   1.0     244285107.0   \n","2        0.0                  36.0     156773144.0   \n","3        0.0                   5.0     165103011.0   \n","4        0.0                  23.0     205138552.0   \n","\n","                Vehicle Location  \\\n","0   POINT (-122.30839 47.610365)   \n","1  POINT (-122.179458 47.802589)   \n","2   POINT (-122.34848 47.632405)   \n","3   POINT (-122.03646 47.534065)   \n","4   POINT (-122.55717 47.733415)   \n","\n","                                Electric Utility  2020 Census Tract  \n","0   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","1                         PUGET SOUND ENERGY INC       5.306105e+10  \n","2   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","3  PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)       5.303303e+10  \n","4                         PUGET SOUND ENERGY INC       5.303594e+10  "],"text/html":["\n","  <div id=\"df-1808894e-4804-4669-8e46-2062f597ebeb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VIN (1-10)</th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>Legislative District</th>\n","      <th>DOL Vehicle ID</th>\n","      <th>Vehicle Location</th>\n","      <th>Electric Utility</th>\n","      <th>2020 Census Tract</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5YJYGDEE1L</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98122</td>\n","      <td>2020</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>291.0</td>\n","      <td>0.0</td>\n","      <td>37.0</td>\n","      <td>125701579.0</td>\n","      <td>POINT (-122.30839 47.610365)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303301e+10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7SAYGDEE9P</td>\n","      <td>Snohomish</td>\n","      <td>Bothell</td>\n","      <td>WA</td>\n","      <td>98021</td>\n","      <td>2023</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Eligibility unknown as battery range has not b...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>244285107.0</td>\n","      <td>POINT (-122.179458 47.802589)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.306105e+10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5YJSA1E4XK</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98109</td>\n","      <td>2019</td>\n","      <td>TESLA</td>\n","      <td>MODEL S</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>270.0</td>\n","      <td>0.0</td>\n","      <td>36.0</td>\n","      <td>156773144.0</td>\n","      <td>POINT (-122.34848 47.632405)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303301e+10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5YJSA1E27G</td>\n","      <td>King</td>\n","      <td>Issaquah</td>\n","      <td>WA</td>\n","      <td>98027</td>\n","      <td>2016</td>\n","      <td>TESLA</td>\n","      <td>MODEL S</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>210.0</td>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>165103011.0</td>\n","      <td>POINT (-122.03646 47.534065)</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>5.303303e+10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5YJYGDEE5M</td>\n","      <td>Kitsap</td>\n","      <td>Suquamish</td>\n","      <td>WA</td>\n","      <td>98392</td>\n","      <td>2021</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Eligibility unknown as battery range has not b...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>23.0</td>\n","      <td>205138552.0</td>\n","      <td>POINT (-122.55717 47.733415)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.303594e+10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1808894e-4804-4669-8e46-2062f597ebeb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1808894e-4804-4669-8e46-2062f597ebeb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1808894e-4804-4669-8e46-2062f597ebeb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-102e77a0-b931-45a4-b5ba-0cc3029a88fd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-102e77a0-b931-45a4-b5ba-0cc3029a88fd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-102e77a0-b931-45a4-b5ba-0cc3029a88fd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 34837,\n  \"fields\": [\n    {\n      \"column\": \"VIN (1-10)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6673,\n        \"samples\": [\n          \"1N4AZ0CP8E\",\n          \"YV4BR0CM9N\",\n          \"3FMTK3SU4P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"King\",\n          \"Jefferson\",\n          \"Clark\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Rainier\",\n          \"Marysville\",\n          \"Bucoda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"WA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 211,\n        \"min\": 98001,\n        \"max\": 99362,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          98001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 202,\n        \"max\": 2024,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"GENESIS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"EV6\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.84139027965178,\n        \"min\": 0.0,\n        \"max\": 337.0,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          234.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Base MSRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8225.837419593945,\n        \"min\": 0.0,\n        \"max\": 184400.0,\n        \"num_unique_values\": 28,\n        \"samples\": [\n          34995.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legislative District\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.69250000784588,\n        \"min\": 1.0,\n        \"max\": 49.0,\n        \"num_unique_values\": 42,\n        \"samples\": [\n          40.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOL Vehicle ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 75390771.84824198,\n        \"min\": 27702.0,\n        \"max\": 478925947.0,\n        \"num_unique_values\": 34836,\n        \"samples\": [\n          257917201.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vehicle Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 213,\n        \"samples\": [\n          \"POINT (-122.2849393 47.3384055)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"PUD NO 1 OF PEND OREILLE COUNTY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020 Census Tract\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11704376.9520107,\n        \"min\": 53007960301.0,\n        \"max\": 53077940006.0,\n        \"num_unique_values\": 969,\n        \"samples\": [\n          53011041328.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":1}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Veri dosyasÄ±nÄ± yÃ¼kleme\n","file_path = 'data.csv'\n","df = pd.read_csv(file_path)\n","\n","# Ä°lk birkaÃ§ satÄ±ra gÃ¶z atalÄ±m\n","df.head()"]},{"cell_type":"code","source":["# Null deÄŸerleri kontrol et\n","null_values = df.isnull().sum()\n","\n","# Null deÄŸerleri gÃ¶ster\n","print(\"Null deÄŸerlerin sayÄ±sÄ±:\")\n","print(null_values)\n","\n","# Null olan satÄ±rlarÄ± gÃ¶ster\n","print(\"Null olan satÄ±rlar:\")\n","print(df[df.isnull().any(axis=1)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"420N_l_QRe2s","executionInfo":{"status":"ok","timestamp":1717706811630,"user_tz":-180,"elapsed":238,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"2c82f56a-4942-440d-83fa-12706fe4abb1"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Null deÄŸerlerin sayÄ±sÄ±:\n","VIN (1-10)                                           0\n","County                                               0\n","City                                                 0\n","State                                                0\n","Postal Code                                          0\n","Model Year                                           0\n","Make                                                 1\n","Model                                                1\n","Electric Vehicle Type                                1\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility    1\n","Electric Range                                       1\n","Base MSRP                                            1\n","Legislative District                                 1\n","DOL Vehicle ID                                       1\n","Vehicle Location                                     1\n","Electric Utility                                     1\n","2020 Census Tract                                    1\n","dtype: int64\n","Null olan satÄ±rlar:\n","       VIN (1-10) County      City State  Postal Code  Model Year Make Model  \\\n","34836  5YJSA1E29L   King  Enumclaw    WA        98022         202  NaN   NaN   \n","\n","      Electric Vehicle Type Clean Alternative Fuel Vehicle (CAFV) Eligibility  \\\n","34836                   NaN                                               NaN   \n","\n","       Electric Range  Base MSRP  Legislative District  DOL Vehicle ID  \\\n","34836             NaN        NaN                   NaN             NaN   \n","\n","      Vehicle Location Electric Utility  2020 Census Tract  \n","34836              NaN              NaN                NaN  \n"]}]},{"cell_type":"code","source":["# `Legislative District` hariÃ§ tÃ¼m sÃ¼tunlarda null deÄŸerleri olan satÄ±rlarÄ± sil\n","cols_to_check = [col for col in df.columns if col != 'Legislative District']\n","df_cleaned = df.dropna(subset=cols_to_check)\n","\n","# Null deÄŸerleri kontrol edelim\n","null_values_after = df_cleaned.isnull().sum()\n","print(\"\\nNull deÄŸerlerin sayÄ±sÄ± (temizlendikten sonra):\")\n","print(null_values_after)\n","\n","# TemizlenmiÅŸ veri setini kontrol edelim\n","print(\"\\nTemizlenmiÅŸ veri seti:\")\n","print(df_cleaned.head())\n","\n","# Null olan satÄ±rlarÄ± gÃ¶ster\n","print(\"\\nNull olan satÄ±rlar:\")\n","print(df_cleaned[df_cleaned.isnull().any(axis=1)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p2NuU4glZJ1q","executionInfo":{"status":"ok","timestamp":1717706814756,"user_tz":-180,"elapsed":251,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"a81002e5-69f1-45e5-d28e-baae525a08ca"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Null deÄŸerlerin sayÄ±sÄ± (temizlendikten sonra):\n","VIN (1-10)                                           0\n","County                                               0\n","City                                                 0\n","State                                                0\n","Postal Code                                          0\n","Model Year                                           0\n","Make                                                 0\n","Model                                                0\n","Electric Vehicle Type                                0\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility    0\n","Electric Range                                       0\n","Base MSRP                                            0\n","Legislative District                                 0\n","DOL Vehicle ID                                       0\n","Vehicle Location                                     0\n","Electric Utility                                     0\n","2020 Census Tract                                    0\n","dtype: int64\n","\n","TemizlenmiÅŸ veri seti:\n","   VIN (1-10)     County       City State  Postal Code  Model Year   Make  \\\n","0  5YJYGDEE1L       King    Seattle    WA        98122        2020  TESLA   \n","1  7SAYGDEE9P  Snohomish    Bothell    WA        98021        2023  TESLA   \n","2  5YJSA1E4XK       King    Seattle    WA        98109        2019  TESLA   \n","3  5YJSA1E27G       King   Issaquah    WA        98027        2016  TESLA   \n","4  5YJYGDEE5M     Kitsap  Suquamish    WA        98392        2021  TESLA   \n","\n","     Model           Electric Vehicle Type  \\\n","0  MODEL Y  Battery Electric Vehicle (BEV)   \n","1  MODEL Y  Battery Electric Vehicle (BEV)   \n","2  MODEL S  Battery Electric Vehicle (BEV)   \n","3  MODEL S  Battery Electric Vehicle (BEV)   \n","4  MODEL Y  Battery Electric Vehicle (BEV)   \n","\n","   Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0            Clean Alternative Fuel Vehicle Eligible           291.0   \n","1  Eligibility unknown as battery range has not b...             0.0   \n","2            Clean Alternative Fuel Vehicle Eligible           270.0   \n","3            Clean Alternative Fuel Vehicle Eligible           210.0   \n","4  Eligibility unknown as battery range has not b...             0.0   \n","\n","   Base MSRP  Legislative District  DOL Vehicle ID  \\\n","0        0.0                  37.0     125701579.0   \n","1        0.0                   1.0     244285107.0   \n","2        0.0                  36.0     156773144.0   \n","3        0.0                   5.0     165103011.0   \n","4        0.0                  23.0     205138552.0   \n","\n","                Vehicle Location  \\\n","0   POINT (-122.30839 47.610365)   \n","1  POINT (-122.179458 47.802589)   \n","2   POINT (-122.34848 47.632405)   \n","3   POINT (-122.03646 47.534065)   \n","4   POINT (-122.55717 47.733415)   \n","\n","                                Electric Utility  2020 Census Tract  \n","0   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","1                         PUGET SOUND ENERGY INC       5.306105e+10  \n","2   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","3  PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)       5.303303e+10  \n","4                         PUGET SOUND ENERGY INC       5.303594e+10  \n","\n","Null olan satÄ±rlar:\n","Empty DataFrame\n","Columns: [VIN (1-10), County, City, State, Postal Code, Model Year, Make, Model, Electric Vehicle Type, Clean Alternative Fuel Vehicle (CAFV) Eligibility, Electric Range, Base MSRP, Legislative District, DOL Vehicle ID, Vehicle Location, Electric Utility, 2020 Census Tract]\n","Index: []\n"]}]},{"cell_type":"code","source":["# Legislative District sÃ¼tununu silin\n","df.drop('Legislative District', axis=1, inplace=True)\n","\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"e5PF8wXyZM0K","executionInfo":{"status":"ok","timestamp":1717706817598,"user_tz":-180,"elapsed":251,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"27d64f65-a7ce-4f6f-c664-06d4354ef99e"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   VIN (1-10)     County       City State  Postal Code  Model Year   Make  \\\n","0  5YJYGDEE1L       King    Seattle    WA        98122        2020  TESLA   \n","1  7SAYGDEE9P  Snohomish    Bothell    WA        98021        2023  TESLA   \n","2  5YJSA1E4XK       King    Seattle    WA        98109        2019  TESLA   \n","3  5YJSA1E27G       King   Issaquah    WA        98027        2016  TESLA   \n","4  5YJYGDEE5M     Kitsap  Suquamish    WA        98392        2021  TESLA   \n","\n","     Model           Electric Vehicle Type  \\\n","0  MODEL Y  Battery Electric Vehicle (BEV)   \n","1  MODEL Y  Battery Electric Vehicle (BEV)   \n","2  MODEL S  Battery Electric Vehicle (BEV)   \n","3  MODEL S  Battery Electric Vehicle (BEV)   \n","4  MODEL Y  Battery Electric Vehicle (BEV)   \n","\n","   Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0            Clean Alternative Fuel Vehicle Eligible           291.0   \n","1  Eligibility unknown as battery range has not b...             0.0   \n","2            Clean Alternative Fuel Vehicle Eligible           270.0   \n","3            Clean Alternative Fuel Vehicle Eligible           210.0   \n","4  Eligibility unknown as battery range has not b...             0.0   \n","\n","   Base MSRP  DOL Vehicle ID               Vehicle Location  \\\n","0        0.0     125701579.0   POINT (-122.30839 47.610365)   \n","1        0.0     244285107.0  POINT (-122.179458 47.802589)   \n","2        0.0     156773144.0   POINT (-122.34848 47.632405)   \n","3        0.0     165103011.0   POINT (-122.03646 47.534065)   \n","4        0.0     205138552.0   POINT (-122.55717 47.733415)   \n","\n","                                Electric Utility  2020 Census Tract  \n","0   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","1                         PUGET SOUND ENERGY INC       5.306105e+10  \n","2   CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)       5.303301e+10  \n","3  PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)       5.303303e+10  \n","4                         PUGET SOUND ENERGY INC       5.303594e+10  "],"text/html":["\n","  <div id=\"df-078d53f7-6a07-4cfc-985a-e32ec24653d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VIN (1-10)</th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Postal Code</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>DOL Vehicle ID</th>\n","      <th>Vehicle Location</th>\n","      <th>Electric Utility</th>\n","      <th>2020 Census Tract</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5YJYGDEE1L</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98122</td>\n","      <td>2020</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>291.0</td>\n","      <td>0.0</td>\n","      <td>125701579.0</td>\n","      <td>POINT (-122.30839 47.610365)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303301e+10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7SAYGDEE9P</td>\n","      <td>Snohomish</td>\n","      <td>Bothell</td>\n","      <td>WA</td>\n","      <td>98021</td>\n","      <td>2023</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Eligibility unknown as battery range has not b...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>244285107.0</td>\n","      <td>POINT (-122.179458 47.802589)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.306105e+10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5YJSA1E4XK</td>\n","      <td>King</td>\n","      <td>Seattle</td>\n","      <td>WA</td>\n","      <td>98109</td>\n","      <td>2019</td>\n","      <td>TESLA</td>\n","      <td>MODEL S</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>270.0</td>\n","      <td>0.0</td>\n","      <td>156773144.0</td>\n","      <td>POINT (-122.34848 47.632405)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>5.303301e+10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5YJSA1E27G</td>\n","      <td>King</td>\n","      <td>Issaquah</td>\n","      <td>WA</td>\n","      <td>98027</td>\n","      <td>2016</td>\n","      <td>TESLA</td>\n","      <td>MODEL S</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>210.0</td>\n","      <td>0.0</td>\n","      <td>165103011.0</td>\n","      <td>POINT (-122.03646 47.534065)</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>5.303303e+10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5YJYGDEE5M</td>\n","      <td>Kitsap</td>\n","      <td>Suquamish</td>\n","      <td>WA</td>\n","      <td>98392</td>\n","      <td>2021</td>\n","      <td>TESLA</td>\n","      <td>MODEL Y</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Eligibility unknown as battery range has not b...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>205138552.0</td>\n","      <td>POINT (-122.55717 47.733415)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>5.303594e+10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-078d53f7-6a07-4cfc-985a-e32ec24653d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-078d53f7-6a07-4cfc-985a-e32ec24653d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-078d53f7-6a07-4cfc-985a-e32ec24653d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef12e9d2-f76a-4539-89a3-4b4f87dd24cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef12e9d2-f76a-4539-89a3-4b4f87dd24cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef12e9d2-f76a-4539-89a3-4b4f87dd24cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 34837,\n  \"fields\": [\n    {\n      \"column\": \"VIN (1-10)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6673,\n        \"samples\": [\n          \"1N4AZ0CP8E\",\n          \"YV4BR0CM9N\",\n          \"3FMTK3SU4P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"King\",\n          \"Jefferson\",\n          \"Clark\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Rainier\",\n          \"Marysville\",\n          \"Bucoda\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"WA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Postal Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 211,\n        \"min\": 98001,\n        \"max\": 99362,\n        \"num_unique_values\": 213,\n        \"samples\": [\n          98001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 202,\n        \"max\": 2024,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"GENESIS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"EV6\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.84139027965178,\n        \"min\": 0.0,\n        \"max\": 337.0,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          234.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Base MSRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8225.837419593945,\n        \"min\": 0.0,\n        \"max\": 184400.0,\n        \"num_unique_values\": 28,\n        \"samples\": [\n          34995.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOL Vehicle ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 75390771.84824198,\n        \"min\": 27702.0,\n        \"max\": 478925947.0,\n        \"num_unique_values\": 34836,\n        \"samples\": [\n          257917201.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vehicle Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 213,\n        \"samples\": [\n          \"POINT (-122.2849393 47.3384055)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"PUD NO 1 OF PEND OREILLE COUNTY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2020 Census Tract\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11704376.9520107,\n        \"min\": 53007960301.0,\n        \"max\": 53077940006.0,\n        \"num_unique_values\": 969,\n        \"samples\": [\n          53011041328.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# City sÃ¼tununda null deÄŸerleri olan satÄ±rlarÄ± silmeden Ã¶nceki satÄ±r sayÄ±sÄ±\n","initial_row_count = len(df)\n","\n","# City sÃ¼tununda null deÄŸerleri olan satÄ±rlarÄ± sil\n","df_cleaned = df.dropna(subset=['City'])\n","\n","# City sÃ¼tununda null deÄŸerleri olan satÄ±rlarÄ± sildikten sonraki satÄ±r sayÄ±sÄ±\n","final_row_count = len(df_cleaned)\n","\n","# Silinen satÄ±r sayÄ±sÄ±nÄ± hesapla\n","rows_deleted = initial_row_count - final_row_count\n","# City sÃ¼tununda null deÄŸerleri olan satÄ±rlarÄ± sil\n","df_cleaned = df.dropna(subset=['City'])\n","print(rows_deleted)\n","\n","# Benzersiz ÅŸehir ve eyalet sayÄ±sÄ±nÄ± bulma\n","unique_cities = df['City'].nunique()\n","unique_states = df['State'].nunique()\n","print(f'Benzersiz Åžehir SayÄ±sÄ±: {unique_cities}')\n","print(f'Benzersiz Eyalet SayÄ±sÄ±: {unique_states}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lu-jhhtoRmFv","executionInfo":{"status":"ok","timestamp":1717706819765,"user_tz":-180,"elapsed":241,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"d6c9bea0-7e12-4845-a487-bbeb7083a22c"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","Benzersiz Åžehir SayÄ±sÄ±: 149\n","Benzersiz Eyalet SayÄ±sÄ±: 1\n"]}]},{"cell_type":"code","source":["# Åžehirlerdeki elektrikli araÃ§larÄ±n sayÄ±sÄ±nÄ± bulma\n","city_vehicle_counts = df['City'].value_counts().head(20)\n","\n","# GÃ¶rselleÅŸtirme\n","plt.figure(figsize=(12, 8))\n","sns.barplot(x=city_vehicle_counts.values, y=city_vehicle_counts.index)\n","plt.title('Åžehirlerdeki Elektrikli AraÃ§ SayÄ±sÄ± (En Ã‡ok 20)')\n","plt.xlabel('AraÃ§ SayÄ±sÄ±')\n","plt.ylabel('Åžehir')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"eCvk2PbMR7-w","executionInfo":{"status":"ok","timestamp":1717671531901,"user_tz":-180,"elapsed":1043,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"51ce37c4-a113-4605-dbae-76027fce5b29"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# FarklÄ± ÅŸehirlerdeki araÃ§ modellerinin daÄŸÄ±lÄ±mÄ±\n","city_model_counts = df_cleaned.groupby(['City', 'Model']).size().unstack().fillna(0)\n","\n","# En Ã§ok gÃ¶rÃ¼len 10 modeli belirleyin\n","top_models = city_model_counts.sum(axis=0).sort_values(ascending=False).index\n","\n","# Sadece en Ã§ok gÃ¶rÃ¼len modelleri iÃ§eren bir dataframe oluÅŸturun\n","city_model_counts_top = city_model_counts[top_models]\n","\n","# Åžehirlerde en Ã§ok gÃ¶rÃ¼len 10 modelin daÄŸÄ±lÄ±mÄ±nÄ± iÃ§eren tabloyu yazdÄ±r\n","print(\"Åžehirlerdeki En Ã‡ok GÃ¶rÃ¼len 10 Elektrikli AraÃ§ Modelinin DaÄŸÄ±lÄ±mÄ±:\")\n","print(city_model_counts_top)\n","\n","# Alternatif olarak tabloyu HTML olarak gÃ¶rmek iÃ§in\n","from IPython.display import display, HTML\n","\n","display(HTML(city_model_counts_top.to_html()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1ZbucPt-LI20OGPhJQQuEjiZ1CZqTSpHd"},"id":"IM7X9zdnSB1j","executionInfo":{"status":"ok","timestamp":1717672469587,"user_tz":-180,"elapsed":4001,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"06c2e8a0-89db-4c54-ee08-8e31c57c44b4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["# Elektrik menzilleri ve Ã§evresel etki\n","electric_range_distribution = df['Electric Range'].dropna()\n","\n","plt.figure(figsize=(12, 8))\n","sns.histplot(electric_range_distribution, bins=20, kde=True)\n","plt.title('Elektrikli AraÃ§larÄ±n Elektrik Menzili DaÄŸÄ±lÄ±mÄ±')\n","plt.xlabel('Elektrik Menzili (mil)')\n","plt.ylabel('AraÃ§ SayÄ±sÄ±')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"atBPNER5SI8Q","executionInfo":{"status":"ok","timestamp":1717706833927,"user_tz":-180,"elapsed":1193,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"d5394b9a-496e-4819-9a60-8b19d0ec87a2"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Eksik verileri kontrol edelim\n","df.isnull().sum()\n","\n","# Gerekirse eksik verileri temizleme\n","df = df.dropna(subset=['VIN (1-10)', 'County', 'City', 'State', 'Model Year', 'Make', 'Model', 'Electric Vehicle Type', 'Electric Range'])\n","\n","# SÃ¼tunlarÄ± yeniden adlandÄ±rmak\n","df.columns = [col.strip().replace(\" \", \"_\").lower() for col in df.columns]"],"metadata":{"id":"PBGcwZBiTpfr","executionInfo":{"status":"ok","timestamp":1717706836373,"user_tz":-180,"elapsed":295,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# Hangi markalar ve modeller en yaygÄ±n?\n","make_model_counts = df.groupby(['make', 'model']).size().reset_index(name='counts')\n","make_model_counts = make_model_counts.sort_values(by='counts', ascending=False)\n","print(make_model_counts.head())\n","\n","# Hangi yÄ±llarda daha fazla EV kaydÄ± var?\n","year_counts = df['model_year'].value_counts().sort_index()\n","print(year_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5vf9sQwdTs43","executionInfo":{"status":"ok","timestamp":1717706837830,"user_tz":-180,"elapsed":247,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"d3773b95-ee72-47ed-86fc-7bfbcd579adb"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["          make    model  counts\n","113      TESLA  MODEL Y    7181\n","110      TESLA  MODEL 3    6170\n","97      NISSAN     LEAF    2644\n","111      TESLA  MODEL S    1474\n","31   CHEVROLET  BOLT EV    1272\n","model_year\n","2000        1\n","2002        1\n","2008        1\n","2010        9\n","2011      139\n","2012      263\n","2013      797\n","2014      634\n","2015      885\n","2016     1043\n","2017     1571\n","2018     2821\n","2019     2070\n","2020     2263\n","2021     3610\n","2022     5462\n","2023    11808\n","2024     1458\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["# Hangi bÃ¶lgelerde daha fazla EV var?\n","county_counts = df['county'].value_counts()\n","print(county_counts.head())\n","\n","# Ä°lÃ§e ve ÅŸehir bazÄ±nda daÄŸÄ±lÄ±m\n","city_counts = df.groupby(['county', 'city']).size().reset_index(name='counts')\n","city_counts = city_counts.sort_values(by='counts', ascending=False)\n","print(city_counts.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OTD9b9IOTxSd","executionInfo":{"status":"ok","timestamp":1717706840046,"user_tz":-180,"elapsed":287,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"fa6654a7-66ac-4c0b-8da9-7c9eace2a302"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["county\n","King         26127\n","Clark         3424\n","Snohomish     1753\n","Kitsap        1516\n","Thurston       986\n","Name: count, dtype: int64\n","   county       city  counts\n","74   King    Seattle    6590\n","44   King   Bellevue    3516\n","59   King   Kirkland    2529\n","12  Clark  Vancouver    2306\n","78   King    Tukwila    1808\n"]}]},{"cell_type":"code","source":["# BEV ve PHEV tÃ¼rlerinin daÄŸÄ±lÄ±mÄ±\n","ev_type_counts = df['electric_vehicle_type'].value_counts()\n","print(ev_type_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aGHSb0cQT4Ku","executionInfo":{"status":"ok","timestamp":1717706842069,"user_tz":-180,"elapsed":248,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"3c6b506e-c1ff-4992-e11c-1975b491a080"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["electric_vehicle_type\n","Battery Electric Vehicle (BEV)            27324\n","Plug-in Hybrid Electric Vehicle (PHEV)     7512\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["# Hangi elektrik saÄŸlayÄ±cÄ±larÄ± daha fazla EV mÃ¼ÅŸterisine sahip?\n","utility_counts = df['electric_utility'].value_counts()\n","print(utility_counts.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2lKMuIUPT7ik","executionInfo":{"status":"ok","timestamp":1717706843999,"user_tz":-180,"elapsed":266,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"e52f8609-efaf-4de1-98c7-87668b52b417"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["electric_utility\n","PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)                       17930\n","CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                         8185\n","PUGET SOUND ENERGY INC                                               4296\n","BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLARK COUNTY - (WA)     3370\n","BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF COWLITZ COUNTY           313\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# MarkalarÄ±n ve modellerin yaygÄ±nlÄ±ÄŸÄ±nÄ± gÃ¶rselleÅŸtirelim\n","plt.figure(figsize=(12, 12))\n","sns.barplot(x='counts', y='make', data=make_model_counts.head(10))\n","plt.title('Top 10 Most Common EV Makes')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"WrWT9m-JTiJD","executionInfo":{"status":"ok","timestamp":1717706845535,"user_tz":-180,"elapsed":4,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"5d6680d3-7693-44cb-fc08-d57ed49ae8fc"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1200 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# AraÃ§ tÃ¼rÃ¼ ve eyalete gÃ¶re daÄŸÄ±lÄ±mÄ± hesaplayalÄ±m\n","vehicle_counts_by_state = df.groupby(['city', 'electric_vehicle_type']).size().unstack().fillna(0)\n","print(vehicle_counts_by_state)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1UdLNpWMWTos","executionInfo":{"status":"ok","timestamp":1717706848434,"user_tz":-180,"elapsed":255,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"d2ec9f99-79d8-4cfc-a749-010db4dbc7f9"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["electric_vehicle_type  Battery Electric Vehicle (BEV)  \\\n","city                                                    \n","Algona                                            9.0   \n","Amboy                                             2.0   \n","Anacortes                                         2.0   \n","Ariel                                             4.0   \n","Arlington                                        32.0   \n","...                                               ...   \n","Yacolt                                           10.0   \n","Yakima                                          103.0   \n","Yarrow Point                                      1.0   \n","Yelm                                             72.0   \n","Zillah                                            4.0   \n","\n","electric_vehicle_type  Plug-in Hybrid Electric Vehicle (PHEV)  \n","city                                                           \n","Algona                                                    4.0  \n","Amboy                                                     1.0  \n","Anacortes                                                 1.0  \n","Ariel                                                     4.0  \n","Arlington                                                14.0  \n","...                                                       ...  \n","Yacolt                                                    3.0  \n","Yakima                                                   43.0  \n","Yarrow Point                                              0.0  \n","Yelm                                                     38.0  \n","Zillah                                                    0.0  \n","\n","[149 rows x 2 columns]\n"]}]},{"cell_type":"code","source":["import csv\n","with open('data.csv', newline='') as csvfile:\n","    reader = csv.DictReader(csvfile)\n","\n","    # Seattle'daki araÃ§larÄ±n sayÄ±sÄ±nÄ± saklayacak deÄŸiÅŸkeni tanÄ±mla\n","    seattle_arac_sayisi = 0\n","\n","    # Her satÄ±rÄ± kontrol et\n","    for row in reader:\n","        # EÄŸer aracÄ±n ÅŸehri \"Seattle\" ise, seattle_arac_sayisi'ni bir artÄ±r\n","        if row['City'] == 'Seattle':\n","            seattle_arac_sayisi += 1\n","\n","# SonuÃ§larÄ± yazdÄ±r\n","\n","print(\"Seattle'daki araÃ§ sayÄ±sÄ±:\", seattle_arac_sayisi)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d63O7KciSGFj","executionInfo":{"status":"ok","timestamp":1717706851705,"user_tz":-180,"elapsed":634,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"aa081521-98f2-4fe5-a793-cf6bcb784713"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Seattle'daki araÃ§ sayÄ±sÄ±: 6590\n"]}]},{"cell_type":"code","source":["from IPython.display import display, HTML\n","# AraÃ§ tÃ¼rÃ¼ ve ÅŸehir bazÄ±nda daÄŸÄ±lÄ±mÄ± hesaplayalÄ±m\n","vehicle_counts_by_city = df_cleaned.groupby(['City', 'Electric Vehicle Type']).size().unstack().fillna(0)\n","display(vehicle_counts_by_city)\n","\n","# Åžarj istasyonu ihtiyacÄ±nÄ± hesaplayalÄ±m\n","charging_station_needs = (vehicle_counts_by_city.sum(axis=1) * 0.01771871).astype(int)\n","\n","# Åžehir baÅŸÄ±na araÃ§ sayÄ±sÄ±nÄ± ve ÅŸarj istasyonu ihtiyacÄ±nÄ± iÃ§eren bir DataFrame oluÅŸturalÄ±m\n","result_df = vehicle_counts_by_city.copy()\n","result_df['Charging Station Needs'] = charging_station_needs\n","\n","# Tabloyu dÃ¼zenli ve okunabilir ÅŸekilde gÃ¶sterelim\n","print(\"Åžehir baÅŸÄ±na araÃ§ sayÄ±sÄ± ve ÅŸarj istasyonu ihtiyacÄ±:\")\n","print(result_df)\n","\n","# Alternatif olarak tabloyu HTML olarak gÃ¶rmek iÃ§in\n","display(HTML(result_df.to_html()))\n","\n","# Pandas gÃ¶sterim ayarlarÄ±nÄ± varsayÄ±lana dÃ¶ndÃ¼rmek (isteÄŸe baÄŸlÄ±)\n","pd.reset_option('display.max_rows')\n","\n","# Toplam ÅŸarj istasyonu sayÄ±sÄ±nÄ± hesaplayalÄ±m\n","total_charging_stations = charging_station_needs.sum()\n","\n","# Toplam ÅŸarj istasyonu sayÄ±sÄ±nÄ± gÃ¶sterelim\n","print(\"\\nToplam ÅŸarj istasyonu ihtiyacÄ±:\")\n","print(total_charging_stations)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"9wufZEpmYTCo","executionInfo":{"status":"ok","timestamp":1717706940104,"user_tz":-180,"elapsed":292,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"de1498a6-536c-45e3-dd41-5e1908511c4c"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["Electric Vehicle Type  Battery Electric Vehicle (BEV)  \\\n","City                                                    \n","Algona                                            9.0   \n","Amboy                                             2.0   \n","Anacortes                                         2.0   \n","Ariel                                             4.0   \n","Arlington                                        32.0   \n","...                                               ...   \n","Yacolt                                           10.0   \n","Yakima                                          103.0   \n","Yarrow Point                                      1.0   \n","Yelm                                             72.0   \n","Zillah                                            4.0   \n","\n","Electric Vehicle Type  Plug-in Hybrid Electric Vehicle (PHEV)  \n","City                                                           \n","Algona                                                    4.0  \n","Amboy                                                     1.0  \n","Anacortes                                                 1.0  \n","Ariel                                                     4.0  \n","Arlington                                                14.0  \n","...                                                       ...  \n","Yacolt                                                    3.0  \n","Yakima                                                   43.0  \n","Yarrow Point                                              0.0  \n","Yelm                                                     38.0  \n","Zillah                                                    0.0  \n","\n","[149 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-be8ab950-2f06-4c0b-b25a-4e396814a332\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Electric Vehicle Type</th>\n","      <th>Battery Electric Vehicle (BEV)</th>\n","      <th>Plug-in Hybrid Electric Vehicle (PHEV)</th>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Algona</th>\n","      <td>9.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>Amboy</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Anacortes</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ariel</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>Arlington</th>\n","      <td>32.0</td>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Yacolt</th>\n","      <td>10.0</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>Yakima</th>\n","      <td>103.0</td>\n","      <td>43.0</td>\n","    </tr>\n","    <tr>\n","      <th>Yarrow Point</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Yelm</th>\n","      <td>72.0</td>\n","      <td>38.0</td>\n","    </tr>\n","    <tr>\n","      <th>Zillah</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>149 rows Ã— 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be8ab950-2f06-4c0b-b25a-4e396814a332')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be8ab950-2f06-4c0b-b25a-4e396814a332 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be8ab950-2f06-4c0b-b25a-4e396814a332');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-138db062-2a88-4082-a847-38c34c528f50\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-138db062-2a88-4082-a847-38c34c528f50')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-138db062-2a88-4082-a847-38c34c528f50 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_448a6094-8f50-4408-a229-c010bc273903\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('vehicle_counts_by_city')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_448a6094-8f50-4408-a229-c010bc273903 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('vehicle_counts_by_city');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"vehicle_counts_by_city","summary":"{\n  \"name\": \"vehicle_counts_by_city\",\n  \"rows\": 149,\n  \"fields\": [\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 149,\n        \"samples\": [\n          \"Medina\",\n          \"Burien\",\n          \"Silverdale\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Battery Electric Vehicle (BEV)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 570.7861884600004,\n        \"min\": 0.0,\n        \"max\": 5237.0,\n        \"num_unique_values\": 83,\n        \"samples\": [\n          127.0,\n          9.0,\n          45.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Plug-in Hybrid Electric Vehicle (PHEV)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 168.97837302332513,\n        \"min\": 0.0,\n        \"max\": 1353.0,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          4.0,\n          63.0,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Åžehir baÅŸÄ±na araÃ§ sayÄ±sÄ± ve ÅŸarj istasyonu ihtiyacÄ±:\n","Electric Vehicle Type  Battery Electric Vehicle (BEV)  \\\n","City                                                    \n","Algona                                            9.0   \n","Amboy                                             2.0   \n","Anacortes                                         2.0   \n","Ariel                                             4.0   \n","Arlington                                        32.0   \n","...                                               ...   \n","Yacolt                                           10.0   \n","Yakima                                          103.0   \n","Yarrow Point                                      1.0   \n","Yelm                                             72.0   \n","Zillah                                            4.0   \n","\n","Electric Vehicle Type  Plug-in Hybrid Electric Vehicle (PHEV)  \\\n","City                                                            \n","Algona                                                    4.0   \n","Amboy                                                     1.0   \n","Anacortes                                                 1.0   \n","Ariel                                                     4.0   \n","Arlington                                                14.0   \n","...                                                       ...   \n","Yacolt                                                    3.0   \n","Yakima                                                   43.0   \n","Yarrow Point                                              0.0   \n","Yelm                                                     38.0   \n","Zillah                                                    0.0   \n","\n","Electric Vehicle Type  Charging Station Needs  \n","City                                           \n","Algona                                      0  \n","Amboy                                       0  \n","Anacortes                                   0  \n","Ariel                                       0  \n","Arlington                                   0  \n","...                                       ...  \n","Yacolt                                      0  \n","Yakima                                      2  \n","Yarrow Point                                0  \n","Yelm                                        1  \n","Zillah                                      0  \n","\n","[149 rows x 3 columns]\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Electric Vehicle Type</th>\n","      <th>Battery Electric Vehicle (BEV)</th>\n","      <th>Plug-in Hybrid Electric Vehicle (PHEV)</th>\n","      <th>Charging Station Needs</th>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Algona</th>\n","      <td>9.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Amboy</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Anacortes</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ariel</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Arlington</th>\n","      <td>32.0</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Auburn</th>\n","      <td>305.0</td>\n","      <td>61.0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Bainbridge Island</th>\n","      <td>366.0</td>\n","      <td>122.0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Battle Ground</th>\n","      <td>161.0</td>\n","      <td>63.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Beaux Arts</th>\n","      <td>28.0</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Bellevue</th>\n","      <td>3003.0</td>\n","      <td>513.0</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>Bingen</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Black Diamond</th>\n","      <td>18.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Bothell</th>\n","      <td>1056.0</td>\n","      <td>189.0</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>Bremerton</th>\n","      <td>177.0</td>\n","      <td>66.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Brier</th>\n","      <td>13.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Brinnon</th>\n","      <td>7.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Brush Prairie</th>\n","      <td>109.0</td>\n","      <td>42.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Bucoda</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Burien</th>\n","      <td>341.0</td>\n","      <td>87.0</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Camano Island</th>\n","      <td>11.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Camas</th>\n","      <td>276.0</td>\n","      <td>91.0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Carnation</th>\n","      <td>8.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cashmere</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Castle Rock</th>\n","      <td>19.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Centralia</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Chelan</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Chewelah</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Chimacum</th>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cle Elum</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Clinton</th>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Clyde Hill</th>\n","      <td>45.0</td>\n","      <td>7.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Colville</th>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Coupeville</th>\n","      <td>15.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Covington</th>\n","      <td>143.0</td>\n","      <td>40.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Cowiche</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Darrington</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Des Moines</th>\n","      <td>120.0</td>\n","      <td>46.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Duvall</th>\n","      <td>131.0</td>\n","      <td>17.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Edmonds</th>\n","      <td>42.0</td>\n","      <td>11.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ellensburg</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Enumclaw</th>\n","      <td>29.0</td>\n","      <td>10.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ephrata</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Everett</th>\n","      <td>127.0</td>\n","      <td>26.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Federal Way</th>\n","      <td>203.0</td>\n","      <td>60.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Forks</th>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Freeland</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gold Bar</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Goldendale</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Grandview</th>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Granger</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Granite Falls</th>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Hansville</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Hunts Point</th>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Indianola</th>\n","      <td>14.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Issaquah</th>\n","      <td>493.0</td>\n","      <td>66.0</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Kalama</th>\n","      <td>24.0</td>\n","      <td>10.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Kelso</th>\n","      <td>47.0</td>\n","      <td>19.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Kenmore</th>\n","      <td>225.0</td>\n","      <td>56.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Kent</th>\n","      <td>786.0</td>\n","      <td>151.0</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>Kettle Falls</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Keyport</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Kingston</th>\n","      <td>59.0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Kirkland</th>\n","      <td>2146.0</td>\n","      <td>383.0</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>La Center</th>\n","      <td>34.0</td>\n","      <td>15.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Lacey</th>\n","      <td>31.0</td>\n","      <td>9.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Lake Forest Park</th>\n","      <td>238.0</td>\n","      <td>58.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Lake Stevens</th>\n","      <td>127.0</td>\n","      <td>37.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Langley</th>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Longview</th>\n","      <td>77.0</td>\n","      <td>41.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Lynnwood</th>\n","      <td>178.0</td>\n","      <td>39.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Mabton</th>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Maple Valley</th>\n","      <td>194.0</td>\n","      <td>39.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Marysville</th>\n","      <td>21.0</td>\n","      <td>10.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Medina</th>\n","      <td>82.0</td>\n","      <td>9.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mercer Island</th>\n","      <td>91.0</td>\n","      <td>18.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mill Creek</th>\n","      <td>59.0</td>\n","      <td>11.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Milton</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Monroe</th>\n","      <td>57.0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Moses Lake</th>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mount Vernon</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mountlake Terrace</th>\n","      <td>5.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Moxee</th>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Mukilteo</th>\n","      <td>58.0</td>\n","      <td>6.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Naches</th>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Newcastle</th>\n","      <td>247.0</td>\n","      <td>30.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Newport</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Nine Mile Falls</th>\n","      <td>16.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Nordland</th>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Normandy Park</th>\n","      <td>135.0</td>\n","      <td>39.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>North Bend</th>\n","      <td>66.0</td>\n","      <td>11.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Oak Harbor</th>\n","      <td>50.0</td>\n","      <td>24.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Olalla</th>\n","      <td>37.0</td>\n","      <td>8.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Olympia</th>\n","      <td>486.0</td>\n","      <td>149.0</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Outlook</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Pacific</th>\n","      <td>12.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Port Angeles</th>\n","      <td>12.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Port Hadlock</th>\n","      <td>11.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Port Ludlow</th>\n","      <td>26.0</td>\n","      <td>12.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Port Orchard</th>\n","      <td>159.0</td>\n","      <td>62.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Port Townsend</th>\n","      <td>129.0</td>\n","      <td>54.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Poulsbo</th>\n","      <td>171.0</td>\n","      <td>73.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Pullman</th>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Quilcene</th>\n","      <td>7.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Quincy</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Rainier</th>\n","      <td>24.0</td>\n","      <td>13.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ravensdale</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Redmond</th>\n","      <td>1425.0</td>\n","      <td>209.0</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>Renton</th>\n","      <td>837.0</td>\n","      <td>175.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>Ridgefield</th>\n","      <td>143.0</td>\n","      <td>52.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Rochester</th>\n","      <td>39.0</td>\n","      <td>17.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sammamish</th>\n","      <td>1301.0</td>\n","      <td>182.0</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>Seabeck</th>\n","      <td>24.0</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Seatac</th>\n","      <td>687.0</td>\n","      <td>62.0</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>Seattle</th>\n","      <td>5237.0</td>\n","      <td>1353.0</td>\n","      <td>116</td>\n","    </tr>\n","    <tr>\n","      <th>Selah</th>\n","      <td>21.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sequim</th>\n","      <td>16.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Shoreline</th>\n","      <td>840.0</td>\n","      <td>195.0</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>Silverdale</th>\n","      <td>84.0</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Silverlake</th>\n","      <td>12.0</td>\n","      <td>4.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Skykomish</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Snohomish</th>\n","      <td>122.0</td>\n","      <td>19.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Snoqualmie</th>\n","      <td>36.0</td>\n","      <td>9.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Spokane</th>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Stanwood</th>\n","      <td>8.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sultan</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sunnyside</th>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Suquamish</th>\n","      <td>23.0</td>\n","      <td>6.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Tenino</th>\n","      <td>26.0</td>\n","      <td>9.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Tieton</th>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Toppenish</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Tukwila</th>\n","      <td>514.0</td>\n","      <td>1294.0</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>Tulalip</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Tumwater</th>\n","      <td>56.0</td>\n","      <td>13.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Union Gap</th>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Vancouver</th>\n","      <td>1707.0</td>\n","      <td>599.0</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>Vashon</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Walla Walla</th>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Wapato</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Washougal</th>\n","      <td>77.0</td>\n","      <td>31.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Wenatchee</th>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>White Salmon</th>\n","      <td>9.0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Woodinville</th>\n","      <td>338.0</td>\n","      <td>56.0</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Woodland</th>\n","      <td>32.0</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Woodway</th>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yacolt</th>\n","      <td>10.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yakima</th>\n","      <td>103.0</td>\n","      <td>43.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Yarrow Point</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yelm</th>\n","      <td>72.0</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Zillah</th>\n","      <td>4.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Toplam ÅŸarj istasyonu ihtiyacÄ±:\n","566\n"]}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3hsw5CCnLh6u","executionInfo":{"status":"ok","timestamp":1716547147728,"user_tz":-180,"elapsed":2378,"user":{"displayName":"Dilara Ã–zdemir","userId":"04144812213846218278"}},"outputId":"9c3abdfe-61c9-4c65-f823-f6605d8b537b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Seattle'daki araÃ§ sayÄ±sÄ±: 29447\n"]}]}]}